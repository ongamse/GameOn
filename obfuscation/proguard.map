com.sebas.core.Bishop -> com.sebas.core.Bishop:
    14:17:void <init>() -> <init>
    27:79:java.util.List move(java.lang.String,java.lang.String,java.lang.String) -> move
    84:106:boolean isRealMove(com.sebas.core.Movement,com.sebas.core.Board,java.lang.String) -> isRealMove
    110:159:java.util.List getSquares(com.sebas.core.Board,com.sebas.core.Movement) -> getSquares
com.sebas.core.Board -> com.sebas.core.Board:
    org.apache.log4j.Logger log -> log
    com.sebas.core.Square[][] squares -> a
    15:15:com.sebas.core.Square[][] getSquares() -> getSquares
    16:16:void setSquares(com.sebas.core.Square[][]) -> setSquares
    18:20:void <init>() -> <init>
    28:136:com.sebas.core.Square[][] buildInitialPosition() -> a
    151:165:com.sebas.core.Square createSquare(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> createSquare
    175:199:java.lang.String calculateVertical(int) -> a
    209:233:java.lang.String calculateHorizontal(int) -> b
    243:258:void update(com.sebas.core.Movement,java.lang.String) -> update
    262:269:void printLine(java.lang.String,java.lang.String) -> printLine
    275:319:void print() -> print
    322:325:boolean checkMate(com.sebas.core.Movement) -> checkMate
    328:330:com.sebas.core.Square getSquare(java.lang.String) -> getSquare
    12:12:void <clinit>() -> <clinit>
com.sebas.core.King -> com.sebas.core.King:
    12:15:void <init>() -> <init>
    19:33:boolean isRealMove(com.sebas.core.Movement,com.sebas.core.Board,java.lang.String) -> isRealMove
    43:124:java.util.List move(java.lang.String,java.lang.String,java.lang.String) -> move
com.sebas.core.Knight -> com.sebas.core.Knight:
    13:16:void <init>() -> <init>
    25:114:java.util.List move(java.lang.String,java.lang.String,java.lang.String) -> move
    122:133:boolean isRealMove(com.sebas.core.Movement,com.sebas.core.Board,java.lang.String) -> isRealMove
com.sebas.core.Match -> com.sebas.core.Match:
    org.apache.log4j.Logger log -> a
    com.sebas.core.Board board -> b
    java.lang.String turn -> c
    boolean checkmate -> d
    int movement -> e
    java.lang.String historyMatch -> f
    java.lang.String logger -> g
    java.lang.String player1 -> h
    java.lang.String player2 -> i
    java.lang.String timer -> j
    26:26:java.lang.String getPlayer1() -> getPlayer1
    29:30:void setPlayer1(java.lang.String) -> setPlayer1
    32:32:java.lang.String getPlayer2() -> getPlayer2
    35:36:void setPlayer2(java.lang.String) -> setPlayer2
    38:38:java.lang.String getTimer() -> getTimer
    41:42:void setTimer(java.lang.String) -> setTimer
    44:44:java.lang.String getLog() -> getLog
    47:48:void setLog(java.lang.String) -> setLog
    49:49:com.sebas.core.Board getBoard() -> getBoard
    50:50:void setBoard(com.sebas.core.Board) -> setBoard
    52:52:java.lang.String getTurno() -> getTurno
    53:53:void setTurno(java.lang.String) -> setTurno
    55:55:java.lang.String getHistoryMatch() -> getHistoryMatch
    56:56:void setHistoryMatch(java.lang.String) -> setHistoryMatch
    58:63:void <init>(java.lang.String) -> <init>
    66:68:void main(java.lang.String[]) -> main
    74:100:void startGame() -> startGame
    108:142:java.lang.String justMove(com.sebas.core.Movement) -> justMove
    12:12:void <clinit>() -> <clinit>
com.sebas.core.Movement -> com.sebas.core.Movement:
    com.sebas.core.Piece piece -> a
    java.lang.String origin -> b
    java.lang.String destiny -> c
    int materialValue -> d
    int squaresControlled -> e
    double heuristicValue -> f
    24:24:com.sebas.core.Piece getPiece() -> getPiece
    25:25:void setPiece(com.sebas.core.Piece) -> setPiece
    27:27:java.lang.String getOrigin() -> getOrigin
    28:28:void setOrigin(java.lang.String) -> setOrigin
    30:30:java.lang.String getDestiny() -> getDestiny
    31:31:void setDestiny(java.lang.String) -> setDestiny
    33:33:int getValue() -> getValue
    34:34:void setValue(int) -> setValue
    36:36:int getSquaresControlled() -> getSquaresControlled
    37:37:void setSquaresControlled(int) -> setSquaresControlled
    39:39:double getHeuristicValue() -> getHeuristicValue
    40:40:void setHeuristicValue(double) -> setHeuristicValue
    42:42:void <init>() -> <init>
    44:48:void <init>(com.sebas.core.Piece,java.lang.String,java.lang.String) -> <init>
    50:62:void <init>(com.sebas.core.Board,java.lang.String) -> <init>
    74:122:com.sebas.core.Movement makeMovement(com.sebas.core.Board,java.lang.String,int) -> makeMovement
    126:130:com.sebas.core.Movement evaluateNumberSquares(com.sebas.core.Board,java.lang.String) -> a
    140:156:java.util.List getPossiblesMoves(com.sebas.core.Board,java.lang.String) -> b
    168:178:java.util.List filterMoves(com.sebas.core.Board,java.util.List,java.lang.String) -> a
    190:209:java.util.List evaluatedMoves(com.sebas.core.Board,java.util.List,java.lang.String) -> b
    213:228:com.sebas.core.Board copy(com.sebas.core.Board) -> a
    238:258:void evaluateMaterial$28c4efbd() -> a
    268:277:com.sebas.core.Movement chooseBestMove(java.util.List) -> a
com.sebas.core.Movement$1 -> com.sebas.core.a:
    268:268:void <init>(com.sebas.core.Movement) -> <init>
    270:270:int compare(com.sebas.core.Movement,com.sebas.core.Movement) -> a
    268:268:int compare(java.lang.Object,java.lang.Object) -> compare
com.sebas.core.Pawn -> com.sebas.core.Pawn:
    13:16:void <init>() -> <init>
    24:105:java.util.List move(java.lang.String,java.lang.String,java.lang.String) -> move
    113:145:boolean isRealMove(com.sebas.core.Movement,com.sebas.core.Board,java.lang.String) -> isRealMove
com.sebas.core.Piece -> com.sebas.core.Piece:
    java.lang.String color -> a
    java.lang.String horizontal -> b
    java.lang.String vertical -> c
    java.lang.String type -> d
    int value -> e
    org.apache.log4j.Logger log -> log
    11:11:void <init>() -> <init>
    21:21:int getValue() -> getValue
    22:22:void setValue(int) -> setValue
    24:24:java.lang.String getType() -> getType
    25:25:void setType(java.lang.String) -> setType
    27:27:java.lang.String getColor() -> getColor
    28:28:void setColor(java.lang.String) -> setColor
    30:30:java.lang.String getHorizontal() -> getHorizontal
    31:31:void setHorizontal(java.lang.String) -> setHorizontal
    33:33:java.lang.String getVertical() -> getVertical
    34:34:void setVertical(java.lang.String) -> setVertical
    java.util.List move(java.lang.String,java.lang.String,java.lang.String) -> move
    boolean isRealMove(com.sebas.core.Movement,com.sebas.core.Board,java.lang.String) -> isRealMove
    19:19:void <clinit>() -> <clinit>
com.sebas.core.Queen -> com.sebas.core.Queen:
    13:16:void <init>() -> <init>
    25:39:java.util.List move(java.lang.String,java.lang.String,java.lang.String) -> move
    47:61:boolean isRealMove(com.sebas.core.Movement,com.sebas.core.Board,java.lang.String) -> isRealMove
    65:72:java.util.List getSquares(com.sebas.core.Board,com.sebas.core.Movement) -> a
com.sebas.core.Square -> com.sebas.core.Square:
    boolean isEmpty -> a
    com.sebas.core.Piece pieza -> b
    java.lang.String horizontal -> c
    java.lang.String vertical -> d
    8:8:void <init>() -> <init>
    16:16:boolean isEmpty() -> isEmpty
    19:20:void setEmpty(boolean) -> setEmpty
    22:22:com.sebas.core.Piece getPieza() -> getPieza
    25:26:void setPieza(com.sebas.core.Piece) -> setPieza
    28:28:java.lang.String getHorizontal() -> getHorizontal
    31:32:void setHorizontal(java.lang.String) -> setHorizontal
    34:34:java.lang.String getVertical() -> getVertical
    37:38:void setVertical(java.lang.String) -> setVertical
com.sebas.core.StartGame -> com.sebas.core.StartGame:
    8:8:void <init>() -> <init>
    14:17:void main(java.lang.String[]) -> main
com.sebas.core.Tower -> com.sebas.core.Tower:
    14:17:void <init>() -> <init>
    27:79:java.util.List move(java.lang.String,java.lang.String,java.lang.String) -> move
    87:108:boolean isRealMove(com.sebas.core.Movement,com.sebas.core.Board,java.lang.String) -> isRealMove
    123:162:java.util.List getSquares(com.sebas.core.Board,com.sebas.core.Movement) -> getSquares
com.sebas.core.UtilChess -> com.sebas.core.UtilChess:
    8:8:void <init>() -> <init>
    16:42:int calculateHorizontal(java.lang.String) -> calculateHorizontal
    49:73:java.lang.String calculateHorizontal(int) -> calculateHorizontal
    83:109:int calculateVertical(java.lang.String) -> calculateVertical
    115:139:java.lang.String calculateVertical(int) -> calculateVertical
    150:173:java.lang.String randomPiece(int) -> randomPiece
    177:182:double round(double,int) -> round
core.sebas.App -> core.sebas.App:
    7:7:void <init>() -> <init>
    11:12:void main(java.lang.String[]) -> main
core.sebas.Serial -> core.sebas.Serial:
    12:12:void <init>() -> <init>
    15:19:java.lang.Object fromBase64(java.lang.String) -> fromBase64
    23:27:java.lang.String toBase64(java.io.Serializable) -> toBase64
core.sebas.servlets.Authentication -> core.sebas.servlets.Authentication:
    org.apache.log4j.Logger log -> a
    long serialVersionUID -> serialVersionUID
    24:24:void <init>() -> <init>
    43:117:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) -> doPost
    26:38:void <clinit>() -> <clinit>
core.sebas.servlets.FirstAuthentication -> core.sebas.servlets.FirstAuthentication:
    long serialVersionUID -> serialVersionUID
    22:22:void <init>() -> <init>
    38:101:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) -> doPost
    32:34:void <clinit>() -> <clinit>
core.sebas.servlets.Game -> core.sebas.servlets.Game:
    long serialVersionUID -> serialVersionUID
    13:13:void <init>() -> <init>
    23:46:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) -> doGet
core.sebas.servlets.HolaMundo -> core.sebas.servlets.HolaMundo:
    long serialVersionUID -> serialVersionUID
    org.apache.log4j.Logger log -> a
    19:19:void <init>() -> <init>
    28:43:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) -> doGet
    24:24:void <clinit>() -> <clinit>
core.sebas.servlets.Load -> core.sebas.servlets.Load:
    long serialVersionUID -> serialVersionUID
    11:11:void <init>() -> <init>
    19:21:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) -> doGet
core.sebas.servlets.LoadGame -> core.sebas.servlets.LoadGame:
    long serialVersionUID -> serialVersionUID
    org.apache.log4j.Logger log -> a
    24:24:void <init>() -> <init>
    36:63:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) -> doPost
    30:30:void <clinit>() -> <clinit>
core.sebas.servlets.MatchServlet -> core.sebas.servlets.MatchServlet:
    long serialVersionUID -> serialVersionUID
    org.apache.log4j.Logger log -> a
    24:24:void <init>() -> <init>
    37:56:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) -> doGet
    61:82:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) -> doPost
    91:100:com.sebas.core.Match updateMatch(javax.servlet.http.HttpSession) -> a
    112:168:java.lang.StringBuffer paintMatch(com.sebas.core.Match,java.lang.String,boolean,java.lang.String) -> a
    31:31:void <clinit>() -> <clinit>
core.sebas.servlets.NewGame -> core.sebas.servlets.NewGame:
    long serialVersionUID -> serialVersionUID
    org.apache.log4j.Logger log -> a
    com.sebas.core.Match match -> b
    21:21:void <init>() -> <init>
    29:29:com.sebas.core.Match getMatch() -> getMatch
    30:30:void setMatch(com.sebas.core.Match) -> setMatch
    35:81:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) -> doGet
    27:27:void <clinit>() -> <clinit>
core.sebas.servlets.Save -> core.sebas.servlets.Save:
    long serialVersionUID -> serialVersionUID
    11:11:void <init>() -> <init>
    19:21:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) -> doGet
core.sebas.servlets.SaveGame -> core.sebas.servlets.SaveGame:
    long serialVersionUID -> serialVersionUID
    25:25:void <init>() -> <init>
    41:73:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) -> doPost
    35:35:void <clinit>() -> <clinit>
core.sebas.servlets.Serialization -> core.sebas.servlets.Serialization:
    long serialVersionUID -> serialVersionUID
    14:14:void <init>() -> <init>
    20:21:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) -> doGet
    26:53:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) -> doPost
core.sebas.servlets.Timer -> core.sebas.servlets.Timer:
    long serialVersionUID -> serialVersionUID
    11:11:void <init>() -> <init>
    17:19:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) -> doGet
