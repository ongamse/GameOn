/*
 * This file was generated by the Gradle 'init' task.
 */
 
buildscript {
      repositories {
      jcenter()
      google()
      mavenCentral()
    }
    dependencies {
      classpath 'com.guardsquare:proguard-gradle:7.0.0'
    }
}
 
plugins {
    id 'java'
    id 'maven-publish'
    id 'application' 
    id 'war'
    id 'com.bmuschko.docker-remote-api' version '6.4.0' 
    id "org.sonarqube" version "3.0"
}

repositories {
    jcenter()
    mavenCentral()
    mavenLocal()
    maven {
      url = uri('https://jcenter.bintray.com')
    }
}

dependencies {
    implementation 'log4j:log4j:1.2.12'
    implementation 'javax.servlet:servlet-api:2.4'
    implementation 'mysql:mysql-connector-java:8.0.19'
    implementation 'org.apache.commons:commons-collections4:4.0'
    testImplementation 'junit:junit:3.8.1'
}

group = 'com.sebas.core'
version = '2.3'
description = 'chess'
sourceCompatibility = '1.8'

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainClass = 'com.sebas.core.StartGame' 
}

jar {
  manifest {
    attributes 'Main-Class': "com.sebas.core.StartGame"
  }
}

//Import task types
import com.bmuschko.gradle.docker.tasks.image.*

task obfuscation(type: proguard.gradle.ProGuardTask) {
  dependsOn build
  verbose
  injars "./build/libs/chess-${project.version}.jar"
  outjars "./build/libs/chess-${project.version}_obf.jar"
  libraryjars "./build/distributions/chess-${project.version}.zip"
  configuration 'obfuscation/proguard.txt'
}

task war_obf(type: War) {
    dependsOn obfuscation
    rootSpec.exclude('**/com/**')
    rootSpec.exclude('**/core/**')
    classpath fileTree(dir:'build/libs/',include:'*_obf.jar')
    archiveName = "chess-${project.version}_obf.war"
}

task buildImage(type: DockerBuildImage) {
    dependsOn war
    inputDir = file('.')
    images.add("docker.io/sebastianrevuelta/chess-game:${project.version}")	
}

task buildImageObf(type: DockerBuildImage) {
    dependsOn war_obf
    inputDir = file('.')
    buildArgs = ['OBF_SUFFIX':'_obf']
    images.add("docker.io/sebastianrevuelta/chess-game:obf-${project.version}")	
}

task pushImageObf(type: DockerPushImage, dependsOn: buildImageObf) {
    dependsOn buildImageObf
    images.add("docker.io/sebastianrevuelta/chess-game:obf-${project.version}")
}


